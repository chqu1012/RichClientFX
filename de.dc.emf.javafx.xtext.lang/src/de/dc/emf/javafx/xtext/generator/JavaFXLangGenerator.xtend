/*
 * generated by Xtext 2.14.0
 */
package de.dc.emf.javafx.xtext.generator

import com.google.inject.Inject
import de.dc.emf.javafx.model.javafx.ChartFX
import de.dc.emf.javafx.model.javafx.NamedElement
import de.dc.emf.javafx.model.javafx.ProjectFX
import de.dc.emf.javafx.model.javafx.TableViewFX
import de.dc.emf.javafx.xtext.configuration.SourceOutputConfigurationProvider
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.emf.ecore.util.EcoreUtil
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext

class JavaFXLangGenerator extends AbstractGenerator {

	TemplateSwitch templates = new TemplateSwitch
	ExtendedTemplateSwitch extendedTemplates = new ExtendedTemplateSwitch
	
	FilePathSwitch filePathFinder = new FilePathSwitch
	ExtendedFilePathSwitch extendedFilePathFinder = new ExtendedFilePathSwitch
	
	EnableGeneratorSwitch checkGenerator = new EnableGeneratorSwitch
	
	TableColumnSwitch tableColumnGenerator = new TableColumnSwitch
	TableColumnPathSwitch tableColumnPathGenerator = new TableColumnPathSwitch
	
	ApplicationSwitch applicationSwitch = new ApplicationSwitch
	
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		resource.allContents.forEach[content|
			val code = templates.doSwitch(content)
			val extendedCode = extendedTemplates.doSwitch(content)
			
			val path = filePathFinder.doSwitch(content)
			val extendedPath = extendedFilePathFinder.doSwitch(content)
			
			val isGeneratorEnabled = checkGenerator.doSwitch(content)
			if (isGeneratorEnabled) {
				fsa.generateFile(path, code)
				if (code!==null && extendedCode!==null) {
					fsa.generateFile(extendedPath, SourceOutputConfigurationProvider.DEFAULT_SRC,extendedCode)
				}
			}
		]
		
		resource.allContents.forEach[element|
			val code = tableColumnGenerator.doSwitch(element)
			val path = tableColumnPathGenerator.doSwitch(element)
			if (code!==null && path!==null) {
				fsa.generateFile(path, code);
			}
		]
		
		
		resource.allContents.filter[it instanceof ChartFX || it instanceof TableViewFX].forEach[element|
			val packagePath = (EcoreUtil.getRootContainer(element) as ProjectFX).packagePath.replace('.', '/')
			val code = applicationSwitch.doSwitch(element)
			val name = "demo/"+(element as NamedElement).name.toFirstUpper+"Application.java"
			val path = packagePath+"/"+name
			val isGeneratorEnabled = checkGenerator.doSwitch(element)
			if (code!==null && path!==null) {
				if (isGeneratorEnabled) {
					fsa.generateFile(path, SourceOutputConfigurationProvider.DEFAULT_SRC, code)
				}
			}
		]	
	}
}

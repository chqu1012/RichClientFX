package de.dc.javafx.xcore.lang.edit.generator;

import de.dc.javafx.xcore.lang.edit.emfSupportDsl.Ecore;
import de.dc.javafx.xcore.lang.edit.emfSupportDsl.SupportedControl;
import de.dc.javafx.xcore.lang.edit.generator.ICustomerGenerator;
import de.dc.javafx.xcore.lang.lib.AbstractApplication;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtend2.lib.StringConcatenation;

@SuppressWarnings("all")
public class SupportedControlApplicationTemplate implements ICustomerGenerator<SupportedControl> {
  @Override
  public String code(final SupportedControl control) {
    StringConcatenation _builder = new StringConcatenation();
    EObject _eContainer = control.eContainer();
    final Ecore ecore = ((Ecore) _eContainer);
    _builder.newLineIfNotEmpty();
    final String packagePath = ecore.getPackagePath().replace("\'", "");
    _builder.newLineIfNotEmpty();
    _builder.append("package ");
    _builder.append(packagePath);
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("import de.dc.javafx.efxclipse.runtime.model.*;");
    _builder.newLine();
    _builder.append("import de.dc.javafx.efxclipse.runtime.*;");
    _builder.newLine();
    _builder.append("import javafx.collections.*;");
    _builder.newLine();
    _builder.append("import javafx.scene.Parent;");
    _builder.newLine();
    _builder.append("import ");
    String _qualifiedName = control.getModel().getQualifiedName();
    _builder.append(_qualifiedName);
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("import ");
    String _qualifiedName_1 = ecore.getRootType().getQualifiedName();
    _builder.append(_qualifiedName_1);
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("import ");
    String _name = AbstractApplication.class.getName();
    _builder.append(_name);
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    final String className = control.getModel().getSimpleName();
    _builder.newLineIfNotEmpty();
    final String model = ecore.getRootType().getSimpleName();
    _builder.newLineIfNotEmpty();
    _builder.append("public class ");
    _builder.append(className);
    _builder.append("TreeViewApplication extends AbstractApplication{");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Override");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected Parent getRoot() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("IEmfManager<");
    _builder.append(model, "\t\t");
    _builder.append("> manager = new ");
    _builder.append(model, "\t\t");
    _builder.append("ModelManager();");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("ObservableList<");
    _builder.append(className, "\t\t");
    _builder.append("> ");
    _builder.append(className, "\t\t");
    _builder.append("s = FXCollections.observableArrayList();");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("for (int i = 0; i < 20; i++) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append(className, "\t\t\t");
    _builder.append(" item = ");
    String _qualifiedName_2 = ecore.getModelFactory().getQualifiedName();
    _builder.append(_qualifiedName_2, "\t\t\t");
    _builder.append(".eINSTANCE.create");
    _builder.append(className, "\t\t\t");
    _builder.append("();");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append(className, "\t\t\t");
    _builder.append("s.add(item);");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("manager.getRoot().get");
    _builder.append(className, "\t\t");
    _builder.append("s().addAll(");
    _builder.append(className, "\t\t");
    _builder.append("s);");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("return new ");
    _builder.append(className, "\t\t");
    _builder.append("TreeView(manager);");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public static void main(String[] args) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("launch(args);");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder.toString();
  }
  
  @Override
  public String path(final SupportedControl control) {
    StringConcatenation _builder = new StringConcatenation();
    EObject _eContainer = control.eContainer();
    String _replace = ((Ecore) _eContainer).getPackagePath().replace("\'", "").replace(".", "/");
    _builder.append(_replace);
    _builder.append("/");
    String _name = control.getName();
    _builder.append(_name);
    _builder.append("TreeViewApplication.java");
    return _builder.toString();
  }
}

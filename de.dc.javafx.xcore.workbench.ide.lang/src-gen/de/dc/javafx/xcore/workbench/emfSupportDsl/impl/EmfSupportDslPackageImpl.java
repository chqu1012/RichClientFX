/**
 * generated by Xtext 2.17.0
 */
package de.dc.javafx.xcore.workbench.emfSupportDsl.impl;

import de.dc.javafx.xcore.workbench.emfSupportDsl.EmfSupportDslFactory;
import de.dc.javafx.xcore.workbench.emfSupportDsl.EmfSupportDslPackage;
import de.dc.javafx.xcore.workbench.emfSupportDsl.IdeContainer;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.eclipse.xtext.common.types.TypesPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class EmfSupportDslPackageImpl extends EPackageImpl implements EmfSupportDslPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ideContainerEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see de.dc.javafx.xcore.workbench.emfSupportDsl.EmfSupportDslPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private EmfSupportDslPackageImpl()
  {
    super(eNS_URI, EmfSupportDslFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link EmfSupportDslPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static EmfSupportDslPackage init()
  {
    if (isInited) return (EmfSupportDslPackage)EPackage.Registry.INSTANCE.getEPackage(EmfSupportDslPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredEmfSupportDslPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    EmfSupportDslPackageImpl theEmfSupportDslPackage = registeredEmfSupportDslPackage instanceof EmfSupportDslPackageImpl ? (EmfSupportDslPackageImpl)registeredEmfSupportDslPackage : new EmfSupportDslPackageImpl();

    isInited = true;

    // Initialize simple dependencies
    TypesPackage.eINSTANCE.eClass();

    // Create package meta-data objects
    theEmfSupportDslPackage.createPackageContents();

    // Initialize created meta-data
    theEmfSupportDslPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theEmfSupportDslPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(EmfSupportDslPackage.eNS_URI, theEmfSupportDslPackage);
    return theEmfSupportDslPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getIdeContainer()
  {
    return ideContainerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getIdeContainer_PackagePath()
  {
    return (EAttribute)ideContainerEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getIdeContainer_Name()
  {
    return (EAttribute)ideContainerEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getIdeContainer_IdeFactory()
  {
    return (EReference)ideContainerEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getIdeContainer_IdePackage()
  {
    return (EReference)ideContainerEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getIdeContainer_IdeItemProviderAdapterFactory()
  {
    return (EReference)ideContainerEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getIdeContainer_GenerateDemo()
  {
    return (EAttribute)ideContainerEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EmfSupportDslFactory getEmfSupportDslFactory()
  {
    return (EmfSupportDslFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    ideContainerEClass = createEClass(IDE_CONTAINER);
    createEAttribute(ideContainerEClass, IDE_CONTAINER__PACKAGE_PATH);
    createEAttribute(ideContainerEClass, IDE_CONTAINER__NAME);
    createEReference(ideContainerEClass, IDE_CONTAINER__IDE_FACTORY);
    createEReference(ideContainerEClass, IDE_CONTAINER__IDE_PACKAGE);
    createEReference(ideContainerEClass, IDE_CONTAINER__IDE_ITEM_PROVIDER_ADAPTER_FACTORY);
    createEAttribute(ideContainerEClass, IDE_CONTAINER__GENERATE_DEMO);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Obtain other dependent packages
    TypesPackage theTypesPackage = (TypesPackage)EPackage.Registry.INSTANCE.getEPackage(TypesPackage.eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes

    // Initialize classes and features; add operations and parameters
    initEClass(ideContainerEClass, IdeContainer.class, "IdeContainer", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getIdeContainer_PackagePath(), ecorePackage.getEString(), "packagePath", null, 0, 1, IdeContainer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getIdeContainer_Name(), ecorePackage.getEString(), "name", null, 0, 1, IdeContainer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getIdeContainer_IdeFactory(), theTypesPackage.getJvmTypeReference(), null, "ideFactory", null, 0, 1, IdeContainer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getIdeContainer_IdePackage(), theTypesPackage.getJvmTypeReference(), null, "idePackage", null, 0, 1, IdeContainer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getIdeContainer_IdeItemProviderAdapterFactory(), theTypesPackage.getJvmTypeReference(), null, "ideItemProviderAdapterFactory", null, 0, 1, IdeContainer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getIdeContainer_GenerateDemo(), ecorePackage.getEBoolean(), "generateDemo", null, 0, 1, IdeContainer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //EmfSupportDslPackageImpl

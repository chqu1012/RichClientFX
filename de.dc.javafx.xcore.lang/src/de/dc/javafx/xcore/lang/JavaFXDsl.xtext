// automatically generated by Xtext
grammar de.dc.javafx.xcore.lang.JavaFXDsl with org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations

import "http://www.frateranatis.org/javafx" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

ProjectFX:
		('packagePath' packagePath=EString)?
		('controls' '{' controls+=ControlFX (controls+=ControlFX)* '}' )?
		('models' '{' models+=ModelFX (models+=ModelFX)* '}' )?
		('bindings' '{' bindings+=Binding (bindings+=Binding)* '}' )?
		('charts' '{' charts+=ChartFX (charts+=ChartFX)* '}' )?
;

ControlFX returns ControlFX:
	TableViewFX | TreeViewFX;

ModelFX returns ModelFX:
	Bean | DerivedBean;


ChartFX returns ChartFX:
	LineChartFX | PieChartFX | AreaChartFX | BubbleChartFX | ScatterChartFX | BarChartFX;

EString returns ecore::EString:
	STRING | ID;

Binding returns Binding:
	{Binding}
	'BindingFX' name=EString '{'
		(property+=BindingProperty (property+=BindingProperty)*)?
	'}';

TreeViewFX returns TreeViewFX:
	{TreeViewFX}
	'TreeViewFX'
	'{'
		('name:' name=EString)?
		('usedModel:' usedModel=JvmTypeReference)?
		('showPropertyView:' showPropertyView=EBoolean)?
		('generateDemo:' generateDemo=EBoolean)?
	'}';

TableViewFX returns TableViewFX:
	{TableViewFX}
	'TableViewFX'
	'{'
		('name:' name=EString)?
		('usedModel:' usedModel=JvmTypeReference)?
		(columns+=TableColumnFX (columns+=TableColumnFX)*)?
		('showPropertyView:' showPropertyView=EBoolean)?
		('showToolbar:' showToolbar=EBoolean)?
		('generateDemo:' generateDemo=EBoolean)?
	'}';

TableColumnFX returns TableColumnFX:
	{TableColumnFX}
	'column'
	'('
		('name:' name=EString)
		('width:' width=EInt)?
		('usedAttribute:' usedAttribute=[AttributeFX|EString])?
		('cellValueFactory:' cellValueFactory=JvmTypeReference)?
		(useFilter?='useFilter')?
	')';

EInt returns ecore::EInt:
	'-'? INT;

AttributeFX returns AttributeFX:
	{AttributeFX}
	type=EString name=EString;

EBoolean returns ecore::EBoolean:
	'true' | 'false';

Bean returns Bean:
	{Bean}
	'class' name=EString '{'
		(attributes+=AttributeFX (attributes+=AttributeFX)*)?
	'}';

DerivedBean returns DerivedBean:
	{DerivedBean}
	'class' name=EString '{'
		('instanceType:' instanceType=EString)
		(attributes+=AttributeFX (attributes+=AttributeFX)*)?
	'}';

BindingProperty returns BindingProperty:
	{BindingProperty}
	type=BindingType name=EString
;

enum BindingType returns BindingType:
				StringProperty = 'StringProperty' | IntegerProperty = 'IntegerProperty' | DoubleProperty = 'DoubleProperty' | FloatProperty = 'FloatProperty' | BooleanProperty = 'BooleanProperty' | ObjectProperty = 'ObjectProperty' | ObservableList = 'ObservableList';

enum Orientation returns Orientation:
				Left = 'Left' | Right = 'Right' | Top = 'Top' | Bottom = 'Bottom';

enum AxisType returns AxisType:
				Number = 'Number' | Category = 'Category';

ChartSeries returns ChartSeries:
	{ChartSeries}
	'ChartSeries'
	name=EString
	'{'
		('dataList' '{' dataList+=ChartFXData ( "," dataList+=ChartFXData)* '}' )?
	'}';

LineChartFX returns LineChartFX:
	{LineChartFX}
	'LineChartFX'
	name=EString
	'{'
		('title' title=EString)?
		('titleSide' titleSide=Orientation)?
		('showLegend' showLegend=EBoolean)?
		('legendSide' legendSide=Orientation)?
		('xAxisType' xAxisType=AxisType)?
		('yAxisType' yAxisType=AxisType)?
		('xAxisLabel' xAxisLabel=EString)?
		('yAxisLabel' yAxisLabel=EString)?
		('series' '{' series+=ChartSeries ( "," series+=ChartSeries)* '}' )?
	'}';

PieChartFX returns PieChartFX:
	{PieChartFX}
	'PieChartFX'
	name=EString
	'{'
		('title' title=EString)?
		('titleSide' titleSide=Orientation)?
		('showLegend' showLegend=EBoolean)?
		('legendSide' legendSide=Orientation)?
		('series' '{' series+=ChartSeries ( "," series+=ChartSeries)* '}' )?
	'}';

AreaChartFX returns AreaChartFX:
	{AreaChartFX}
	'AreaChartFX'
	name=EString
	'{'
		('title' title=EString)?
		('titleSide' titleSide=Orientation)?
		('showLegend' showLegend=EBoolean)?
		('legendSide' legendSide=Orientation)?
		('xAxisType' xAxisType=AxisType)?
		('yAxisType' yAxisType=AxisType)?
		('xAxisLabel' xAxisLabel=EString)?
		('yAxisLabel' yAxisLabel=EString)?
		('series' '{' series+=ChartSeries ( "," series+=ChartSeries)* '}' )?
	'}';

BubbleChartFX returns BubbleChartFX:
	{BubbleChartFX}
	'BubbleChartFX'
	name=EString
	'{'
		('title' title=EString)?
		('titleSide' titleSide=Orientation)?
		('showLegend' showLegend=EBoolean)?
		('legendSide' legendSide=Orientation)?
		('xAxisType' xAxisType=AxisType)?
		('yAxisType' yAxisType=AxisType)?
		('xAxisLabel' xAxisLabel=EString)?
		('yAxisLabel' yAxisLabel=EString)?
		('series' '{' series+=ChartSeries ( "," series+=ChartSeries)* '}' )?
	'}';

ScatterChartFX returns ScatterChartFX:
	{ScatterChartFX}
	'ScatterChartFX'
	name=EString
	'{'
		('title' title=EString)?
		('titleSide' titleSide=Orientation)?
		('showLegend' showLegend=EBoolean)?
		('legendSide' legendSide=Orientation)?
		('xAxisType' xAxisType=AxisType)?
		('yAxisType' yAxisType=AxisType)?
		('xAxisLabel' xAxisLabel=EString)?
		('yAxisLabel' yAxisLabel=EString)?
		('series' '{' series+=ChartSeries ( "," series+=ChartSeries)* '}' )?
	'}';

BarChartFX returns BarChartFX:
	{BarChartFX}
	'BarChartFX'
	name=EString
	'{'
		('title' title=EString)?
		('titleSide' titleSide=Orientation)?
		('showLegend' showLegend=EBoolean)?
		('legendSide' legendSide=Orientation)?
		('series' '{' series+=ChartSeries ( "," series+=ChartSeries)* '}' )?
	'}';

ChartFXData returns ChartFXData:
	{ChartFXData}
	'ChartFXData'
	'{'
		('xValue' xValue=EString)?
		('yValue' yValue=EString)?
	'}';
